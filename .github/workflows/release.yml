name: build for release

on:
  release:
    types: [published]

jobs:
  build-mod:
    name: Build Mod
    runs-on: ubuntu-latest
    env:
      MODKIT_VERSION: 0.11.0.2-beta-release-707
      ECO_BRANCH: staging
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Fetch dependencies
      run: dotnet restore ./EcoCivicsImportExportMod/EcoCivicsImportExportMod.csproj
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    - name: Cache Eco dlls
      id: cache-eco-dlls
      uses: actions/cache@v2
      with:
        path: ./eco-dlls
        key: ${{ env.MODKIT_VERSION }}-ref-dlls
    - name: Download Eco dlls
      if: steps.cache-eco-dlls.outputs.cache-hit != 'true'
      run: sh fetch-eco-reference-assemblies.sh
    - name: Build
      run: dotnet build ./EcoCivicsImportExportMod/EcoCivicsImportExportMod.csproj --configuration Release --no-restore /p:AssemblyVersion=${{github.event.release.tag_name}}
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: mod-binaries-${{github.event.release.tag_name}}
        path: EcoCivicsImportExportMod/bin/Release/net7.0/EcoCivicsImportExportMod.*
  build-bundler-tool:
    name: Build Bundler Tool
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.201'
    - name: Fetch dependencies
      run: dotnet restore ./EcoCivicsImportExportMod.Bundler/EcoCivicsImportExportMod.Bundler.csproj
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    - name: Build
      run: dotnet build ./EcoCivicsImportExportMod.Bundler/EcoCivicsImportExportMod.Bundler.csproj --configuration Release --no-restore
      env:
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    - name: Archive
      run: 7z a EcoCivicsImportExportMod.Bundler/bin/EcoCivicsImportExportMod.Bundler.zip ./EcoCivicsImportExportMod.Bundler/bin/Release/net5.0-windows/*
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: bundler-tool-binaries-${{github.event.release.tag_name}}
        path: EcoCivicsImportExportMod.Bundler/bin/EcoCivicsImportExportMod.Bundler.zip
  deploy:
    name: Upload Release Assets
    needs:
    - build-mod
    - build-bundler-tool
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact (mod)
        id: download-mod
        uses: actions/download-artifact@v2
        with:
          name: mod-binaries-${{github.event.release.tag_name}}
      - name: Upload release asset (mod)
        id: upload-release-asset-mod
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{github.event.release.upload_url}}
          asset_path: ${{steps.download-mod.outputs.download-path}}/EcoCivicsImportExportMod.dll
          asset_name: EcoCivicsImportExportMod.dll
          asset_content_type: application/octet-stream
      - name: Download build artifact (bundler tool)
        id: download-bundler-tool
        uses: actions/download-artifact@v2
        with:
          name: bundler-tool-binaries-${{github.event.release.tag_name}}
      - name: Upload release asset (bundler tool)
        id: upload-release-asset-bundler-tool
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{github.event.release.upload_url}}
          asset_path: ${{steps.download-bundler-tool.outputs.download-path}}/EcoCivicsImportExportMod.Bundler.zip
          asset_name: EcoCivicsImportExportMod.Bundler.zip
          asset_content_type: application/octet-stream
